<!DOCTYPE validators PUBLIC "-//Apache Struts//XWork Validator 1.0.3//EN"
		"http://struts.apache.org/dtds/xwork-validator-1.0.3.dtd">
<validators>
	<field name="email">
	    <field-validator type="fieldexpression">
		    <param name="expression">!(( email == "" || email == null) and method == "emailSignup")</param> 
			<message key="error.account.signup.email.required">Please input an email</message>
		</field-validator>
				
		<field-validator type="email">
			<message key="error.account.signup.email">The email seems invalid</message>
		</field-validator>
		<field-validator type="stringlength">
                    <param name="maxLength">256</param>
                    <message key="error.account.signup.email.long">The email seems too long</message>
               </field-validator>
	</field>
	
	<field name="phone">
		<field-validator type="fieldexpression">
		    <param name="expression">!( (phone == "" || phone == null) and method == "phoneSignup")</param> 
			<message key="error.account.signup.phone.required">Please input a phone number</message>
		</field-validator>
		<field-validator type="stringlength">
                    <param name="maxLength">20</param>
                    <message key="error.account.signup.phone.long">The phone seems too long</message>
               </field-validator>
	</field>
	
	<field name="password">
	    <field-validator type="requiredstring">
	    	<message key="error.account.signup.password.required">Please input a password</message>
	    </field-validator>
	    <field-validator type="stringlength">
	        <param name="minLength">8</param>
	        <param name="maxLength">20</param>
			<message key="error.account.signup.password.length">The password should have between ${minLength} and ${maxLength} characters</message>
		</field-validator>
	</field>
	<field name="repassword">
	    <field-validator type="fieldexpression">
	        <param name="expression">password==repassword</param> 
			<message key="error.account.signup.repassword.mismatch"><![CDATA[Passwords don't match]]></message>
		</field-validator>
	</field>
	<field name="sex">	    
		<field-validator type="required">
			<message key="error.account.signup.sex.required">Please input a sex</message>
		</field-validator>
		<field-validator type="fieldexpression">
			<param name="expression"><![CDATA[ sex == 0 || sex == 1 || sex == 2 || sex == 9]]></param>
			<message key="error.account.signup.sex.invalid">sex should be one of 0, 1, 2 or 9</message>
		</field-validator>
		
	</field>
	<field name="fullName">
		<field-validator type="fieldexpression">
		    <param name="expression">!(fullName == "" || fullName == null)</param> 
			<message key="error.account.signup.fullName.required">Please input a fullName</message>
		</field-validator>
		<field-validator type="stringlength">
	        <param name="minLength">3</param>
	        <param name="maxLength">70</param>
			<message key="error.account.signup.fullName.length">The fullName should have between ${minLength} and ${maxLength} characters</message>
		</field-validator>
	</field>
	<field name="locationId">
	     <field-validator type="fieldexpression">
		    <param name="expression">!(locationId == "" || locationId == null)</param> 
			<message key="error.account.signup.locationId.required">Please input locationId</message>
		</field-validator>
		<field-validator type="int">
			<param name="min">1</param>
			<param name="max">100000</param>
			<message  key="error.account.signup.locationId.value">locationId must be between ${min} and ${max}, current value is ${locationId}</message>
		</field-validator>
	</field>
	
	<!-- <field name="bar">
		<field-validator type="required">
			<message>You must enter a value for bar.</message>
		</field-validator>
		<field-validator type="int">
			<param name="min">6</param>
			<param name="max">10</param>
			<message>bar must be between ${min} and ${max}, current value is
				${bar}.</message>
		</field-validator>
	</field>
	<field name="bar2">
		<field-validator type="regex">
			<param name="expression">[0-9],[0-9]</param>
			<message>The value of bar2 must be in the format "x, y", where x and
				y are between 0 and 9</message>
		</field-validator>
	</field>
	<field name="date">
		<field-validator type="date">
			<param name="min">12/22/2002</param>
			<param name="max">12/25/2002</param>
			<message>The date must be between 12-22-2002 and 12-25-2002.
			</message>
		</field-validator>
	</field>
	<field name="foo">
		<field-validator type="int">
			<param name="min">0</param>
			<param name="max">100</param>
			<message key="foo.range">Could not find foo.range!</message>
		</field-validator>
	</field>
	<validator type="expression">
		<param name="expression">foo lt bar </param>
		<message>Foo must be greater than Bar. Foo = ${foo}, Bar = ${bar}.
		</message>
	</validator>
	 -->
</validators>